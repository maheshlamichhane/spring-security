package com.lamichhane.springsercurity.security;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;

public class JwtAuthorizationFilter extends BasicAuthenticationFilter
{
	private UserDetailServiceImpl userDetailServiceImpl;
	
	public JwtAuthorizationFilter(AuthenticationManager authenticationManager,
			UserDetailServiceImpl userDetailsServiceImpl)
	{
		super(authenticationManager);
		this.userDetailServiceImpl=userDetailsServiceImpl;
	}
	
	@Override
	protected void doFilterInternal(HttpServletRequest request,
			HttpServletResponse response,FilterChain chain) throws IOException,ServletException
	{
		//Getting the header from the request
		String authHeader=request.getHeader("Authorization");
		
		//Validate the authorization header
		if(authHeader==null || authHeader.trim().length()==0 || !authHeader.startsWith("Bearer "))
		{
			chain.doFilter(request, response);
			return;
		}
		
		//Auth Header is present and is in valid format
		UsernamePasswordAuthenticationToken authenticationToken=getAuthentication(authHeader);
		SecurityContextHolder.getContext().setAuthentication(authenticationToken);
		chain.doFilter(request, response);
	}

	private UsernamePasswordAuthenticationToken getAuthentication(String authHeader) {
		// TODO Auto-generated method stub
		return null;
	}
}
