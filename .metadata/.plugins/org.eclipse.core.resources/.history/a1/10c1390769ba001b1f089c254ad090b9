package com.lamichhane.springsercurity.security;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

import com.auth0.jwt.JWT;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.lamichhane.springsercurity.user.User;

public class JwtAuthenticationFilter extends UsernamePasswordAuthenticationFilter
{
	private AuthenticationManager authenticationManager;
	
	public JwtAuthenticationFilter(AuthenticationManager authenticationManager)
	{
		this.authenticationManager=	authenticationManager;
	}
	
	public Authentication attemptAuthentication(HttpServletRequest request,HttpServletResponse
			 respone ) throws AuthenticationException
	{
		User user=null;
		try
		{
			user=new ObjectMapper().readValue(request.getInputStream(),User.class);
			return authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(user.getUsername(),
					user.getPassword(),new ArrayList<>()));
		}
		catch(BadCredentialsException bce)
		{
			throw bce;
		}
		catch(Exception e)
		{
			throw new RuntimeException(e);
		}
	}
	
	protected void successfulAuthentication(HttpServeltRequest request,
			HttpServeltResponse response,FilterChain chain,Authentication auth) throws IOException,ServletException
	{
		User user=(User) auth.getPrincipal();
		String token=JWT.create().withSubject(user.getUsername()).withExpiresAt(new Date(System.currentTimeMillis())+)
	}
}
